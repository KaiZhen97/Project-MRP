var counter = 0;
var modalMode = 0;
var canceledFiles = [];

$(document).ready(function () {
    uploadImage();
    if ($("#hdnRFQID").val()) {
        setMode(1);
        retrieveData();
        retrieveAttachment();
    }
    //console.log("hdnRFQID", $("#hdnRFQID"));

    $("#RFQForm").submit(function (e) {
        e.preventDefault();
    });

    $("#btnSubmitRFQ").click(function (e) {
        e.preventDefault();
        if (modalMode == 0) 
            addRFQWithUpload();
        
        else if (modalMode == 1) 
            submitDraftRFQWithUpload(canceledFiles);
        
    });

    $("#btnSubmitRFQDraft").click(function (e) {
        e.preventDefault();
        if (modalMode == 0) 
            //addRFQDraft();
            addRFQDraftWithUpload();
        
        else if (modalMode == 1) {
            editRFQDraftWithUpload(canceledFiles);
            canceledFiles = [];
        }
    });

    $("#btnCancelRFQForm").click(function (e) {
        Drawer_ResetInput($("#CloseRaiseRFQ"));
        Drawer_Show($("#CloseRaiseRFQ"));
    });

    $("#btnCloseRaiseRFQSaveDraft").click(function (e) {
        e.preventDefault();
        Drawer_Hide($("#CloseRaiseRFQ"));
        if (modalMode == 0) {
            addRFQDraftWithUpload();
        }
        else if (modalMode == 1) {
            editRFQDraftWithUpload(canceledFiles);
        }
    });

    $("#btnCloseRaiseRFQDiscard, #btnCloseRaiseRFQCancel").click(function () {
        Drawer_Hide($("#CloseRaiseRFQ"));
    });

    $("#btnResetRFQ").click(function () {
        resetField();
    });

    console.log("hdnRFQID", $("#hdnRFQID"));
});

//start Raise RFQ Submit & Add Draft
function addRFQDraftWithUpload() {
    var dataStr = {
        Title: $("#txtTitle").val(),
        Description: $("#txtDescription").val(),
        tempWatcher: $("#txtWatchers").val()
    };
    var fileBox = $(".fileBox .attachment2");
    var imageArr = [];

    var fileData = new FormData();
    var _checkFileType = true;
    fileData.append('JsonString', JSON.stringify(dataStr));

    if ($('.fileBox')[0]) {
        var _countFile = 0;
        var _filesize = 0;
        var counter = 0;
        $.each($('.fileBox .attachment2'), function () {
            $.each($(fileBox[counter])[0].files, function (key, value) {
                var _randNo = Math.floor(Math.random() * 9000) + 1000;
                var _newFilename = _randNo + "-" + value.name;

                if (value.size > 2000000)
                    alert('file (' + value.name + ') exceed 2mb limit.');

                //_filesize = _filesize + value.size;
                fileData.append('file', value, _newFilename);
                _countFile++;
                counter++;
                var ext = _newFilename.split('.').pop().toLowerCase();
                if ($.inArray(ext, ['gif', 'jpg', 'jpeg', 'png', 'pdf', 'doc', 'docx']) == -1) {
                    _checkFileType = false;
                    $("#btnSubmit").removeAttr('disabled', 'disabled');
                    return;
                }
            });
        })

        if (!_checkFileType) {
            alert('Invalid file type\nOnly allow file type .pdf/.doc/.docx/.png/.jpg/.jpeg');
            $("#btnSubmit").removeAttr('disabled', 'disabled');
            return;
        }
        //check file size
        //if (_fileSize > 2000000) {
        //    sweetAlertMessage('File uploaded exceed 2mb', 'error', false, "Please upload file size below 2mb");
        //    return;
        //}
    }

    $.ajax({
        headers: {
            "Authorization": "Bearer " + authToken
        },
        url: reqAddRFQDraftWithUploadUrl,
        processData: false,
        contentType: false,
        data: fileData,
        type: 'POST'
    }).done(function (result) {
        //tblCal.api().ajax.reload(null, false);
        //tl.ajax.reload();
        if (result["Message"])
            alert(result["Message"]);
        else {
            alert("Data Added Successfully");
            goPreviousPage();
        }

    }).fail(function (xhr, ajaxOptions, thrownError) {
        if (xhr.responseJSON["Message"])
            alert('Failed to add data.\nReason : ' + xhr.responseJSON["Message"]);
        else
            alert('Failed to add data');
    });
};

function addRFQWithUpload() {
    var watcherArray = $("#txtWatchers").val().split(",");
    var dataStr = {
        Title: $("#txtTitle").val(),
        Description: $("#txtDescription").val(),
        Watchers: watcherArray
    };
    var fileBox = $(".fileBox .attachment2");
    var imageArr = [];

    var fileData = new FormData();
    var _checkFileType = true;

    fileData.append('JsonString', JSON.stringify(dataStr));

    if ($('.fileBox')[0]) {
        var _countFile = 0;
        var _filesize = 0;
        var counter = 0;
        $.each($('.fileBox .attachment2'), function () {
            $.each($(fileBox[counter])[0].files, function (key, value) {
                var _randNo = Math.floor(Math.random() * 9000) + 1000;
                var _newFilename = _randNo + "-" + value.name;

                if (value.size > 2000000)
                    alert('file (' + value.name + ') exceed 2mb limit.');

                //_filesize = _filesize + value.size;
                fileData.append('file', value, _newFilename);
                _countFile++;
                counter++;
                var ext = _newFilename.split('.').pop().toLowerCase();
                if ($.inArray(ext, ['gif', 'jpg', 'jpeg', 'png', 'pdf', 'doc', 'docx']) == -1) {
                    _checkFileType = false;
                    $("#btnSubmit").removeAttr('disabled', 'disabled');
                    return;
                }
            });
        })

        if (!_checkFileType) {
            alert('Invalid file type\nOnly allow file type .pdf/.doc/.docx/.png/.jpg/.jpeg');
            $("#btnSubmit").removeAttr('disabled', 'disabled');
            return;
        }
        //check file size
        //if (_fileSize > 2000000) {
        //    sweetAlertMessage('File uploaded exceed 2mb', 'error', false, "Please upload file size below 2mb");
        //    return;
        //}
    }

    $.ajax({
        headers: {
            "Authorization": "Bearer " + authToken
        },
        url: reqAddRFQWithUploadUrl,
        processData: false,
        contentType: false,
        data: fileData,
        type: 'POST'
    }).done(function (result) {
        //tblCal.api().ajax.reload(null, false);
        //tl.ajax.reload();

        if (result["Message"])
            alert(result["Message"]);
        else {
            alert("Data Added Successfully");
            goPreviousPage();
        }
            
    }).fail(function (xhr, ajaxOptions, thrownError) {
        if (xhr.responseJSON["Message"]) {

            alert('Failed to add data.\nReason : ' + xhr.responseJSON["Message"]);
        }

        else
            alert('Failed to add data');
    });
};

function editRFQDraftWithUpload(canceledFiles) {
    var dataStr = {
        ID: $("#hdnRFQID").val(),
        Title: $("#txtTitle").val(),
        Description: $("#txtDescription").val(),
        CanceledFilesList: canceledFiles,
        TraceAction: 17,
        tempWatcher: $("#txtWatchers").val()
    };
    var fileBox = $(".fileBox .attachment2");
    var imageArr = [];
    var fileData = new FormData();
    var _checkFileType = true;

    fileData.append('JsonString', JSON.stringify(dataStr));

    if ($('.fileBox')[0]) {
        var _countFile = 0;
        var _filesize = 0;
        var counter = 0;
        $.each($('.fileBox .attachment2'), function () {
            $.each($(fileBox[counter])[0].files, function (key, value) {
                var _randNo = Math.floor(Math.random() * 9000) + 1000;
                var _newFilename = _randNo + "-" + value.name;

                if (value.size > 2000000)
                    alert('file (' + value.name + ') exceed 2mb limit.');

                //_filesize = _filesize + value.size;
                fileData.append('file', value, _newFilename);
                _countFile++;
                counter++;
                var ext = _newFilename.split('.').pop().toLowerCase();
                if ($.inArray(ext, ['gif', 'jpg', 'jpeg', 'png', 'pdf', 'doc', 'docx']) == -1) {
                    _checkFileType = false;
                    $("#btnSubmit").removeAttr('disabled', 'disabled');
                    return;
                }
            });
        })

        if (!_checkFileType) {
            alert('Invalid file type\nOnly allow file type .pdf/.doc/.docx/.png/.jpg/.jpeg');
            $("#btnSubmit").removeAttr('disabled', 'disabled');
            return;
        }
        //check file size
        //if (_fileSize > 2000000) {
        //    sweetAlertMessage('File uploaded exceed 2mb', 'error', false, "Please upload file size below 2mb");
        //    return;
        //}
    }

    $.ajax({
        headers: {
            "Authorization": "Bearer " + authToken
        },
        url: reqEditRFQDraftWithUploadUrl,
        processData: false,
        contentType: false,
        data: fileData,
        type: 'POST'
    }).done(function (result) {
        //tblCal.api().ajax.reload(null, false);
        //tl.ajax.reload();

        if (result["Message"])
            alert(result["Message"]);
        else {
            alert("Data Added Successfully");
            goPreviousPage();
        }
            

    }).fail(function (xhr, ajaxOptions, thrownError) {
        if (xhr.responseJSON["Message"])
            alert('Failed to add data.\nReason : ' + xhr.responseJSON["Message"]);
        else
            alert('Failed to add data');
    });
};

function submitDraftRFQWithUpload(canceledFiles) {
    var watcherArray = $("#txtWatchers").val().split(",");
    var dataStr = {
        ID: $("#hdnRFQID").val(),
        Title: $("#txtTitle").val(),
        Description: $("#txtDescription").val(),
        CanceledFilesList: canceledFiles,
        TraceAction: 17,
        Watchers: watcherArray
    };
    var fileBox = $(".fileBox .attachment2");
    var imageArr = [];
    var fileData = new FormData();
    var _checkFileType = true;

    fileData.append('JsonString', JSON.stringify(dataStr));

    if ($('.fileBox')[0]) {
        var _countFile = 0;
        var _filesize = 0;
        var counter = 0;
        $.each($('.fileBox .attachment2'), function () {
            $.each($(fileBox[counter])[0].files, function (key, value) {
                var _randNo = Math.floor(Math.random() * 9000) + 1000;
                var _newFilename = _randNo + "-" + value.name;

                if (value.size > 2000000)
                    alert('file (' + value.name + ') exceed 2mb limit.');

                //_filesize = _filesize + value.size;
                fileData.append('file', value, _newFilename);
                _countFile++;
                counter++;
                var ext = _newFilename.split('.').pop().toLowerCase();
                if ($.inArray(ext, ['gif', 'jpg', 'jpeg', 'png', 'pdf', 'doc', 'docx']) == -1) {
                    _checkFileType = false;
                    $("#btnSubmit").removeAttr('disabled', 'disabled');
                    return;
                }
            });
        })

        if (!_checkFileType) {
            alert('Invalid file type\nOnly allow file type .pdf/.doc/.docx/.png/.jpg/.jpeg');
            $("#btnSubmit").removeAttr('disabled', 'disabled');
            return;
        }
        //check file size
        //if (_fileSize > 2000000) {
        //    sweetAlertMessage('File uploaded exceed 2mb', 'error', false, "Please upload file size below 2mb");
        //    return;
        //}
    }

    $.ajax({
        headers: {
            "Authorization": "Bearer " + authToken
        },
        url: reqSubmitDraftRFQWithUploadUrl,
        processData: false,
        contentType: false,
        data: fileData,
        type: 'POST'
    }).done(function (result) {
        //tblCal.api().ajax.reload(null, false);
        //tl.ajax.reload();

        if (result["Message"]){
            alert(result["Message"]);
            goPreviousPage();
        }
        else {
            alert("Data Added Successfully");
            goPreviousPage();
        }
            

    }).fail(function (xhr, ajaxOptions, thrownError) {
        if (xhr.responseJSON["Message"])
            alert('Failed to add data.\nReason : ' + xhr.responseJSON["Message"]);
        else
            alert('Failed to add data');
    });
};
//end Raise RFQ Submit && Add Draft

function goPreviousPage() {
    window.location.href = '/Views/PurchasingRFQManagement/RFQList'
}

function setMode(mode) {
    modalMode = mode;
}

function retrieveData() {
    var dataStr = {
        ID: $("#hdnRFQID").val(),
    };

    //setMode(1);
    $.ajax({
        url: reqDataUrl,
        type: "POST",
        data: JSON.stringify(dataStr),
        dataType: "json",
        headers: {
            "Content-Type": "application/json; charset=utf-8",
            "Authorization": "Bearer " + authToken
        },
        success: function (data, status, xhr) {
            $("#txtTitle").val(data.Title);
            $("#txtDescription").val(data.Description);
            $("#txtWatchers").val(data.tempWatcher);
        },
        error: function (xhr, ajaxOptions, thrownError) {

        }
    });
    console.log("hdn", $("#hdnRFQID"));
}

function retrieveAttachment() {
    canceledFiles = [];
    var dataStr = {iD: $("#hdnRFQID").val()};
    var returnStr = "";
    $.ajax({
        url: reqAttachmentUrl,
        type: "POST",
        data: JSON.stringify(dataStr),
        dataType: "json",
        headers: {
            "Content-Type": "application/json; charset=utf-8",
            "Authorization": "Bearer " + authToken
        },
        success: function (data, status, xhr) {
            $.each(data, function (key, value) {
                var returnStr = "";
                returnStr += '<div class="fileContainer">';
                returnStr += '<div class="attachment-title-wrap" id="a' + counter + '">';
                returnStr += '<span class="fa-stack fa-2x">';
                returnStr += '<i class="fa-solid fa-file fa-stack-2x "></i><i class="fa-solid fa-circle-minus fa-2xs fa-stack" style="color:red; position:absolute;bottom:37px; right:-17px;" onclick="minimizeAttachment(this.parentNode.parentNode, '+value.ID+')"></i>';
                returnStr += '</span>';
                returnStr += '<span class="attachment-title">' + value.AttachmentName + '</span>';
                returnStr += '</div>';
                returnStr += '</div>';
                if (value.AttachmentName == "")
                    returnStr = '<h4>File not found.</h4>';
                $(".fileBox").prepend(returnStr);
            });
            
            
            return returnStr;
        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert("data failed to load");
        }
    });
}

function resetField() {
    if (modalMode == 1) 
        retrieveData();
    else {
        $("#txtTitle").val("");
        $("#txtDescription").val("");
    }
}

//start Attachment manipulation
function readURL(input) {
    for (var i = 0; i < input.files.length; i++) {
        if (input.files && input.files[0]) {
            var returnStr = "";
            returnStr += '<div class="attachment-title-wrap" id="a' +counter + '">';
            returnStr += '<span class="fa-stack fa-2x">';
            returnStr += '<i class="fa-solid fa-file fa-stack-2x "></i><i class="fa-solid fa-circle-minus fa-2xs fa-stack" style="color:red; position:absolute;bottom:37px; right:-17px;" onclick="minimizeAttachment(this.parentNode.parentNode.parentNode)"></i>';
            returnStr += '</span>';
            returnStr += '<span class="attachment-title">' + input.files[i].name + '</span>';
            returnStr += '</div>';
            $(input.parentNode).append(returnStr);
            $(input).hide();       
        }
        else {
            removeUpload();       
        }
        counter = counter + 1;
    }
}

function minimizeAttachment(container, fileID) {
    $(container).remove();
    canceledFiles.push(fileID);
}


function uploadImage() {
    var button = $('.fileBox .addButton')
    var fileBox = $('.fileBox')

    button.on('click', function () {
        fileBox.prepend('<div class="fileContainer"><input class="attachment2" type="file" onchange="readURL(this);"/></div>')
        //uploader.click()
    })

    fileBox.on('click', '.attachment', function () {
        $(this).remove()
    })
}