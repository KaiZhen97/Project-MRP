var authToken = "";
var reqTableURL = "";
var reqLoadStatusUrl = "";
var reqLoadModuleNameUrl = "";
var reqAddNewRFQUrl = "";
var reqEditRFQUrl = "";
var currentSelectedRFQ;
var RFQSetupTable = null;
var currModalMode = 'new';
var t;

$(document).ready(function () {
    loadTable(reqTableURL, authToken);

    $("#btnCancelYes").click(function () {
        deleteRFQ();
    });

    $("#btnCancelNo").click(function () {
        Drawer_Hide($("#CancelRFQModal"));
    });

});

function loadTable(reqTableUrl, authToken) {
    t = $('#tblRFQOnHandData').DataTable(
        {
            "processing": true,
            "serverSide": false,
            "stateSave": true,
            "ajax":
            {
                "url": reqTableUrl,
                "contentType": "application/json",
                "type": "GET",
                "dataType": "JSON",
                "beforeSend": function (xhr) {
                    xhr.setRequestHeader("Authorization",
                        "Bearer " + authToken);
                },
                "data": function (d) {
                    return d;
                }
            },
            "columns": [
                {
                    "data": "RFQNo",
                    "width": "10%"
                },
                {
                    "data": "Title",
                    "width": "10%"
                },
                {
                    "data": "Description",
                    "width": "30%"
                },
                {
                    "data": "Active",
                    "mRender": function (data, type, full) {
                        if (data == 1)
                            return "Submitted";
                        else
                            return "Not Submitted";
                    },
                    "width": "5%"
                },
                {
                    "data": "CreatedByStaffName",
                    "width": "10%"
                },
                {
                    "data": "Purchaser1StaffName",
                    "width": "10%"
                },
                {
                    "data": "CreatedDate",
                    "width": "10%"
                },
                {
                    "data": "LastUpdatedDate",
                    "width": "10%"
                }
            ],
            "initComplete": function (settings, json) {
                $('[data-toggle="tooltip"]').tooltip();
            },
            "searchable": true,
            "orderable": true,
            "responsive": {
                "details": false
            },
            "order": [[1, 'asc']],
            "autoWidth": true,
        });
}

function setCurrentSelectedRFQ(RFQ) {
    currentSelectedRFQ = RFQ;
}

function deleteRFQ() {
    var dataStr = {
        ID: currentSelectedRFQ,
        CancelRemark: $("#txtRemarks").val()
    };
    $.ajax({
        url: reqDeleteUrl,
        type: 'Post',
        dataType: 'json',
        data: JSON.stringify(dataStr),
        headers: {
            "Content-Type": 'application/json; charset=utf-8',
            "Authorization": "Bearer " + authToken,
        },
        success: function (data, status, xhr) {
            alert("data successfully deleted");
            Drawer_Hide($("#CancelRFQModal"));
            t.ajax.reload();
        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert("data delete failed")
            error(xhr);
        }
    })
};

function loadRFQDetails(reqDataUrl, authToken, dataStr) {
    return new Promise((resolve, error) => {
        $.ajax({
            url: reqDataUrl,
            type: 'Post',
            dataType: 'json',
            data: JSON.stringify(dataStr),
            headers: {
                "Content-Type": 'application/json; charset=utf-8',
                "Authorization": "Bearer " + authToken,
            },
            success: function (data, status, xhr) {
                $("#txtRFQNo").append("<span>Are you confim to Cancel </span><span>" + data.RFQNo + "?</span>");
                resolve(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                error(xhr);
            }
        })
    })
}

$.contextMenu({
    selector: '#tblRFQOnHandData tbody tr',
    className: 'css-title-toolbox',
    items: {
        'Cancel': {
            name: 'Cancel',
            icon: 'fa-trash-can',
            callback: function (key, options) {
                var targetDrawer = $("#CancelRFQModal");
                var rowData = t.row(options.$trigger).data();
                console.log("12" + rowData);
                $("#txtRFQNo span").text("");

                var dataStr = {
                    ID: rowData.ID
                }
                setCurrentSelectedRFQ(rowData.ID);
                //$(`#${hiddenTabID_ID}`).val(rowData.ModuleID);

                Drawer_ResetInput(targetDrawer);
                Drawer_Show(targetDrawer, true);

                loadRFQDetails(reqDataUrl, authToken, dataStr)
                    .then(() => {
                        Drawer_Show(targetDrawer, false);

                    })
                    .catch((error) => {
                        Drawer_Hide(targetDrawer);
                        ShowError('Failt To Load Tab Details', error.responseText || error)
                    })
            }
        },
        'details': {
            name: 'RFQ Details',
            icon: 'fa-trash-can',
            callback: function (key, options) {
                var rowData = t.row(options.$trigger).data();
                toUrl = "/Views/PurchasingRFQManagement/RFQDetails/" + rowData.ID
                location.href = toUrl;
            }
        }
    }
})
